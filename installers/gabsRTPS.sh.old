#! /usr/bin/env bash

########## Novo Teste ##########

## Instalação ROS Galactic

cd
# Locale Check UTF-8 - locale
sudo apt update && sudo apt install -y locales
sudo locale-gen en_US en_US.UTF-8
sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export LANG=en_US.UTF-8

# Ubuntu Universe Repository
sudo apt install -y software-properties-common
sudo add-apt-repository universe

# ROS2 apt repositorysudo apt update && sudo apt install curl gnupg lsb-release
sudo apt update && sudo apt install curl gnupg lsb-release
sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

# Add to source list
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Install ROS 2 packages
sudo apt update
sudo apt install ros-galactic-desktop

# Source
source /opt/ros/galactic/setup.bash

# Test examples
ros2 run demo_nodes_cpp talker
ros2 run demo_nodes_py listener

# Fast DDS - run test examples again
sudo apt install ros-galactic-rmw-fastrtps-cpp
export RMW_IMPLEMENTATION=rmw_fastrtps_cpp

## eProsima Fast DDS
cd skyrats-workplace
mkdir src
cd src

## PX4 e ubuntu.sh
git clone repository (v1.12.3)
sudo pip3 install numpy --upgrade
ubuntu.sh


# Gradle via sdkman
mkdir sdkman_installer
cd sdkman_installer
curl -s "https://get.sdkman.io" | bash
source "$HOME/.sdkman/bin/sdkman-init.sh"
echo 'source "$HOME/.sdkman/bin/sdkman-init.sh"' >> ~/.bashrc
cd ..
echo
sdk install gradle 6.3

# Foonathan memory
git clone https://github.com/eProsima/foonathan_memory_vendor.git
cd foonathan_memory_vendor
mkdir build && cd build
cmake ..
sudo cmake --build . --target install

cd ..
cd ..

# Fast-RTPS-gen
git clone --recursive https://github.com/eProsima/Fast-DDS-Gen.git -b v1.0.4
cd Fast-DDS-Gen/
gradle assemble
sudo env "PATH=$PATH" gradle install

#qgroudcontrol
sudo usermod -a -G dialout $USER
sudo apt-get remove modemmanager -y
sudo apt install gstreamer1.0-plugins-bad gstreamer1.0-libav gstreamer1.0-gl -y
sudo apt install libqt5gui5 -y

sudo apt install -y python3-colcon-common-extensions
sudo apt install ros-galactic-eigen3-cmake-module
sudo pip3 install -U empy pyros-genmsg setuptools testresources
sudo pip3 install -U empy pyros-genmsg setuptools

# Build WS
mkdir -p ~/px4_ros_com_ros2/src
cd ~/px4_ros_com_ros2/src
git clone https://github.com/PX4/px4_ros_com.git ~/px4_ros_com_ros2/src/px4_ros_com
git clone https://github.com/PX4/px4_msgs.git ~/px4_ros_com_ros2/src/px4_msgs
cd ~/px4_ros_com_ros2/src/px4_ros_com/scripts
bash build_ros2_workspace.bash

# Sanity Check
pip3 install kconfiglib
pip3 install --user jsonschema

